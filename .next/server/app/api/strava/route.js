"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/strava/route";
exports.ids = ["app/api/strava/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstrava%2Froute&page=%2Fapi%2Fstrava%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstrava%2Froute.ts&appDir=%2FUsers%2Fx%2FDesktop%2Fvibes%2Fme%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fx%2FDesktop%2Fvibes%2Fme&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstrava%2Froute&page=%2Fapi%2Fstrava%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstrava%2Froute.ts&appDir=%2FUsers%2Fx%2FDesktop%2Fvibes%2Fme%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fx%2FDesktop%2Fvibes%2Fme&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_x_Desktop_vibes_me_src_app_api_strava_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/strava/route.ts */ \"(rsc)/./src/app/api/strava/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/strava/route\",\n        pathname: \"/api/strava\",\n        filename: \"route\",\n        bundlePath: \"app/api/strava/route\"\n    },\n    resolvedPagePath: \"/Users/x/Desktop/vibes/me/src/app/api/strava/route.ts\",\n    nextConfigOutput,\n    userland: _Users_x_Desktop_vibes_me_src_app_api_strava_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/strava/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzdHJhdmElMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnN0cmF2YSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnN0cmF2YSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnglMkZEZXNrdG9wJTJGdmliZXMlMkZtZSUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZ4JTJGRGVza3RvcCUyRnZpYmVzJTJGbWUmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDSztBQUNsRjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL3BlcnNvbmFsLXdlYnNpdGUvP2ZiYmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3gvRGVza3RvcC92aWJlcy9tZS9zcmMvYXBwL2FwaS9zdHJhdmEvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3N0cmF2YS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3N0cmF2YVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc3RyYXZhL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3gvRGVza3RvcC92aWJlcy9tZS9zcmMvYXBwL2FwaS9zdHJhdmEvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvc3RyYXZhL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstrava%2Froute&page=%2Fapi%2Fstrava%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstrava%2Froute.ts&appDir=%2FUsers%2Fx%2FDesktop%2Fvibes%2Fme%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fx%2FDesktop%2Fvibes%2Fme&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/strava/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/strava/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n// Cache object to store Strava data\nlet stravaCache = {\n    data: null,\n    timestamp: 0\n};\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes in milliseconds\nconst TOKENS_FILE = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \".env.local\");\nconst STRAVA_ACCESS_TOKEN = process.env.STRAVA_ACCESS_TOKEN;\nconst STRAVA_REFRESH_TOKEN = process.env.STRAVA_REFRESH_TOKEN;\nconst STRAVA_CLIENT_ID = process.env.STRAVA_CLIENT_ID;\nconst STRAVA_CLIENT_SECRET = process.env.STRAVA_CLIENT_SECRET;\nconst STRAVA_ATHLETE_ID = \"68781812\";\n// Rate limiting\nlet lastRequestTime = 0;\nconst MIN_REQUEST_INTERVAL = 1000; // 1 second between requests\nasync function refreshStravaToken() {\n    try {\n        console.log(\"Refreshing Strava token...\");\n        console.log(\"Using refresh token:\", STRAVA_REFRESH_TOKEN?.substring(0, 10) + \"...\");\n        console.log(\"Using client ID:\", STRAVA_CLIENT_ID);\n        console.log(\"Using client secret:\", STRAVA_CLIENT_SECRET?.substring(0, 5) + \"...\");\n        if (!STRAVA_REFRESH_TOKEN || !STRAVA_CLIENT_ID || !STRAVA_CLIENT_SECRET) {\n            throw new Error(\"Missing required credentials for token refresh\");\n        }\n        const response = await fetch(\"https://www.strava.com/oauth/token\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                client_id: STRAVA_CLIENT_ID,\n                client_secret: STRAVA_CLIENT_SECRET,\n                refresh_token: STRAVA_REFRESH_TOKEN,\n                grant_type: \"refresh_token\"\n            })\n        });\n        const responseData = await response.json();\n        console.log(\"Strava token refresh response:\", {\n            status: response.status,\n            ok: response.ok,\n            data: {\n                ...responseData,\n                access_token: responseData.access_token?.substring(0, 10) + \"...\",\n                refresh_token: responseData.refresh_token?.substring(0, 10) + \"...\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to refresh token: ${JSON.stringify(responseData)}`);\n        }\n        if (!responseData.access_token || !responseData.refresh_token) {\n            throw new Error(\"Invalid token refresh response: missing tokens\");\n        }\n        // Update .env.local with new tokens\n        try {\n            let envContent = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(TOKENS_FILE, \"utf8\");\n            const lines = envContent.split(\"\\n\");\n            const updatedLines = lines.map((line)=>{\n                if (line.startsWith(\"STRAVA_ACCESS_TOKEN=\")) {\n                    return `STRAVA_ACCESS_TOKEN=${responseData.access_token}`;\n                }\n                if (line.startsWith(\"STRAVA_REFRESH_TOKEN=\")) {\n                    return `STRAVA_REFRESH_TOKEN=${responseData.refresh_token}`;\n                }\n                return line;\n            });\n            fs__WEBPACK_IMPORTED_MODULE_1___default().writeFileSync(TOKENS_FILE, updatedLines.join(\"\\n\"));\n            console.log(\"Updated .env.local with new tokens\");\n        } catch (fileError) {\n            console.error(\"Error updating .env.local:\", fileError);\n        // Don't throw here, we can still use the new tokens in memory\n        }\n        return responseData.access_token;\n    } catch (error) {\n        console.error(\"Error refreshing Strava token:\", error);\n        throw error;\n    }\n}\nasync function fetchStravaData(accessToken) {\n    try {\n        // Rate limiting\n        const now = Date.now();\n        const timeSinceLastRequest = now - lastRequestTime;\n        if (timeSinceLastRequest < MIN_REQUEST_INTERVAL) {\n            console.log(\"Rate limited, returning cached data\");\n            return stravaCache.data;\n        }\n        lastRequestTime = now;\n        console.log(\"Fetching Strava data...\");\n        console.log(\"Using access token:\", accessToken.substring(0, 10) + \"...\");\n        // Try to refresh the token first\n        let currentToken = accessToken;\n        try {\n            const newToken = await refreshStravaToken();\n            currentToken = newToken;\n            console.log(\"Successfully refreshed token, using new token:\", currentToken.substring(0, 10) + \"...\");\n        } catch (refreshError) {\n            console.error(\"Failed to refresh token:\", refreshError);\n            throw new Error(\"Failed to refresh Strava token. Please re-authenticate.\");\n        }\n        // Now fetch activities with the new token\n        const response = await fetch(\"https://www.strava.com/api/v3/athlete/activities?per_page=5\", {\n            headers: {\n                Authorization: `Bearer ${currentToken}`\n            }\n        });\n        const responseData = await response.json();\n        console.log(\"Strava API response:\", {\n            status: response.status,\n            ok: response.ok,\n            data: responseData,\n            dataLength: Array.isArray(responseData) ? responseData.length : \"not an array\",\n            activities: Array.isArray(responseData) ? responseData.map((activity)=>({\n                    id: activity.id,\n                    type: activity.type,\n                    name: activity.name,\n                    distance: activity.distance,\n                    moving_time: activity.moving_time,\n                    start_date: activity.start_date,\n                    location_city: activity.location_city,\n                    location_state: activity.location_state,\n                    location_country: activity.location_country,\n                    average_heartrate: activity.average_heartrate,\n                    max_heartrate: activity.max_heartrate,\n                    has_heartrate: activity.has_heartrate,\n                    trainer: activity.trainer,\n                    commute: activity.commute,\n                    manual: activity.manual,\n                    private: activity.private,\n                    visibility: activity.visibility,\n                    flagged: activity.flagged,\n                    gear_id: activity.gear_id,\n                    average_speed: activity.average_speed,\n                    max_speed: activity.max_speed,\n                    total_elevation_gain: activity.total_elevation_gain,\n                    achievement_count: activity.achievement_count,\n                    kudos_count: activity.kudos_count,\n                    comment_count: activity.comment_count,\n                    athlete_count: activity.athlete_count,\n                    photo_count: activity.photo_count,\n                    map: activity.map ? \"present\" : \"absent\",\n                    start_latlng: activity.start_latlng,\n                    end_latlng: activity.end_latlng,\n                    timezone: activity.timezone,\n                    utc_offset: activity.utc_offset,\n                    location: {\n                        city: activity.location_city,\n                        state: activity.location_state,\n                        country: activity.location_country,\n                        start_latlng: activity.start_latlng,\n                        end_latlng: activity.end_latlng\n                    }\n                })) : \"not an array\"\n        });\n        if (!response.ok) {\n            if (response.status === 429) {\n                // If rate limited and we have cached data, return it\n                if (stravaCache.data && Date.now() - stravaCache.timestamp < CACHE_DURATION) {\n                    console.log(\"Rate limited, returning cached data\");\n                    return stravaCache.data;\n                }\n                throw new Error(\"Rate limit exceeded. Please try again later.\");\n            }\n            if (response.status === 401) {\n                console.error(\"Token still invalid after refresh:\", responseData);\n                throw new Error(\"Authentication failed. Please re-authenticate with Strava.\");\n            }\n            throw new Error(`Failed to fetch Strava data: ${JSON.stringify(responseData)}`);\n        }\n        // Update cache\n        stravaCache = {\n            data: responseData,\n            timestamp: Date.now()\n        };\n        return responseData;\n    } catch (error) {\n        console.error(\"Error fetching Strava data:\", error);\n        throw error;\n    }\n}\nasync function GET() {\n    try {\n        console.log(\"Checking environment variables...\");\n        console.log(\"Has access token:\", !!STRAVA_ACCESS_TOKEN);\n        console.log(\"Has refresh token:\", !!STRAVA_REFRESH_TOKEN);\n        console.log(\"Has client ID:\", !!STRAVA_CLIENT_ID);\n        console.log(\"Has client secret:\", !!STRAVA_CLIENT_SECRET);\n        if (!STRAVA_ACCESS_TOKEN || !STRAVA_REFRESH_TOKEN || !STRAVA_CLIENT_ID || !STRAVA_CLIENT_SECRET) {\n            console.error(\"Missing environment variables:\", {\n                hasAccessToken: !!STRAVA_ACCESS_TOKEN,\n                hasRefreshToken: !!STRAVA_REFRESH_TOKEN,\n                hasClientId: !!STRAVA_CLIENT_ID,\n                hasClientSecret: !!STRAVA_CLIENT_SECRET\n            });\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Missing required environment variables\"\n            }, {\n                status: 500\n            });\n        }\n        // Check if we have valid cached data\n        if (stravaCache.data && Date.now() - stravaCache.timestamp < CACHE_DURATION) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(stravaCache.data);\n        }\n        const data = await fetchStravaData(STRAVA_ACCESS_TOKEN);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(data);\n    } catch (error) {\n        console.error(\"Error in GET handler:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: error.message || \"Failed to fetch Strava data\"\n        }, {\n            status: 500\n        });\n    }\n}\nfunction formatDuration(seconds) {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/strava/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstrava%2Froute&page=%2Fapi%2Fstrava%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstrava%2Froute.ts&appDir=%2FUsers%2Fx%2FDesktop%2Fvibes%2Fme%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fx%2FDesktop%2Fvibes%2Fme&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();